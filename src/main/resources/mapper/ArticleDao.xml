<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.demo.dao.ArticleDao">

    <insert id="writeArticle">
        INSERT INTO article
        SET regDate = now(),
            updateDate = now(),
            title = #{title}, body = #{body}, memberId = #{memberId}, boardId = #{boardId}, views = #{views}
    </insert>

    <update id="increaseVCnt">
        update article
        set views = views + 1
        where id = #{id}
    </update>

    <select id="getArticleCountByBoard" resultType="int">
        select count(*)
        from article
        where boardId = #{boardId}
        <if test="searchKeyword != ''">
            <choose>
                <when test="selectKey == 'title'">
                    and title LIKE CONCAT('%', #{searchKeyword}, '%')
                </when>
                <when test="selectKey == 'body'">
                    and body LIKE CONCAT('%', #{searchKeyword}, '%')
                </when>
                <otherwise>
                    and (
                    body LIKE CONCAT('%', #{searchKeyword}, '%')
                    or
                    body LIKE CONCAT('%', #{searchKeyword}, '%')
                    )
                </otherwise>
            </choose>
        </if>
    </select>

    <select id="getLastInsertId" resultType="int">
        SELECT LAST_INSERT_ID()
    </select>

    <select id="getArticleById" resultType="Article">
        select *
        from article
        where id = #{id}
    </select>

    <select id="getArticleByNickname" resultType="Article">
        SELECT A.*
             , M.nickname                            AS `writerName`
             , IFNULL(SUM(RP.point), 0)              AS sumReactionPoint
             , SUM(IF(RP.point &gt; 0, RP.point, 0)) AS goodReactionPoint
             , SUM(IF(RP.point &lt; 0, RP.point, 0)) AS badReactionPoint
        FROM article AS A
                 INNER JOIN `member` AS M
                            ON A.memberId = M.id
                 LEFT JOIN reactionPoint AS RP
                           ON RP.relTypeCode = 'article'
                               AND A.id = RP.relId
        WHERE A.id = #{id}
        GROUP BY A.id
    </select>

    <select id="getReactionPointArticle" resultType="Article">
        select *
        from reactionPoint
        where relId = #{relId}
    </select>

    <select id="getArticleReactionPoint" resultType="Article">
        select a.*, p.relId as relId, p.point as point
        from article as a
                 inner join reactionPoint as p
                            on a.id = p.relId
                                and a.memberId = p.memberId
        where a.id = #{id};
    </select>

    <insert id="addReactionPoint">
        insert into reactionPoint
        set regDate = now(),
            updateDate = now(),
            memberId = #{memberId}, relTypeCode = #{relTypeCode}, relId = #{relId}, `point` = #{point};
    </insert>

    <update id="removeReactionPoint">
        delete
        from reactionPoint
        where relId = #{relId}
    </update>

    <select id="getAllArticles" resultType="Article">
        SELECT A.*
        , M.nickname AS `writerName`
        , IFNULL(SUM(RP.point), 0) AS sumReactionPoint
        , SUM(IF(RP.point &gt; 0, RP.point, 0)) AS goodReactionPoint
        , SUM(IF(RP.point &lt; 0, RP.point, 0)) AS badReactionPoint
        FROM article AS A
        INNER JOIN `member` AS M
        ON A.memberId = M.id
        LEFT JOIN reactionPoint AS RP
        ON RP.relTypeCode = 'article'
        AND A.id = RP.relId
        WHERE A.boardId = #{boardId}
        <if test="searchKeyword != ''">
            <choose>
                <when test="selectKey == 'title'">
                    AND A.title LIKE CONCAT('%', #{searchKeyword}, '%')
                </when>
                <when test="selectKey == 'body'">
                    AND A.body LIKE CONCAT('%', #{searchKeyword}, '%')
                </when>
                <otherwise>
                    AND (
                    A.title LIKE CONCAT('%', #{searchKeyword}, '%')
                    OR A.body LIKE CONCAT('%', #{searchKeyword}, '%')
                    )
                </otherwise>
            </choose>
        </if>
        GROUP BY A.id
        ORDER BY A.id DESC
        LIMIT #{limitFrom}, #{itemsInAPage}
    </select>

    <delete id="deleteArticle">
        DELETE
        FROM article
        WHERE id = #{id}
    </delete>

    <update id="modifyArticle">
        UPDATE article
        <set>
            updateDate = now(),
            <if test="title != null and title != ''">
                title = #{title},
            </if>
            <if test="body != null and body != ''">
                body = #{body}
            </if>
        </set>
        WHERE id = #{id}
    </update>

</mapper>

